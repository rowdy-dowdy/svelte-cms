// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model Admin {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  password String
  name     String
  image    String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Image {
  id            String  @id @default(cuid())
  name          String
  type          String
  caption       String?
  url           String
  width         Int?
  height        Int?
  naturalHeight Int
  naturalWidth  Int
  size          Float

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model DataType {
  id   String @id @default(uuid())
  name String

  dataRows DataRow[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model DataRow {
  id      String  @id @default(uuid())
  name    String
  field   String
  details String?

  dataTypeId String
  dataType   DataType @relation(fields: [dataTypeId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
